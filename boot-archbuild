#!/bin/bash
# Directories where initrd.gz and bzImage are located
basedir=$(dirname "$(readlink -f "$0")")
: ${SSHPORT=2222}
: ${MEM:=4G}
: ${CPUS:=$(($(nproc)-1))}

cmdline='vga=792 quiet console=tty0 console=ttyS0,115200n8'

args=(
    -machine pc,accel=kvm
    -kernel "$basedir/bzImage" -initrd "$basedir/initrd.gz"
    -serial stdio
    #-serial file:$basedir/serial.txt

    -drive media=cdrom,if=virtio,file="$basedir/archlinux.iso"

    -net user,hostfwd=tcp:0:$SSHPORT-:22
    -net nic,model=virtio

    -device usb-ehci # -device usb-kbd
    -vga std -cpu host
    -m $MEM -smp $CPUS
    # -vnc :0
)

if [ $# -gt 0 ] && [[ $1 != -* ]]; then
    if [ ! -d "$1" ]; then
        echo "$1: is not a directory that can be exported via virtfs!"
        exit 1
    fi
    # use security_model=mapped-file to create a .virtfs-metadata/ dir in $1.
    # passthrough checks the owner against the accessing user (root cannot
    # create files as the owner of the file cannot be set to root). Therefore
    # use 'none' which silently ignores such errors.
    args+=(
        -virtfs local,mount_tag=shared,security_model=none,path="$1"
    )
    # Ensures writable mountpoint in the guest via a matching uid/gid mapping.
    env=" app.uid=$(id -u) app.gid=$(id -g)"
    cmdline+="$env"
    shift
fi
if [ -n "$SPICE_PORT" ]; then
    args+=(
        # Disable standard VGA device, using QXL as primary instead.
        -vga none -device qxl-vga,vgamem_mb=32
        -spice port=${SPICE_PORT},disable-ticketing
        -device virtio-serial
        -chardev spicevmc,id=vdagent,name=vdagent
        -device virtserialport,chardev=vdagent,name=com.redhat.spice.0
    )
fi

# Append env $CMDLINE
cmdline+="${CMDLINE:+ $CMDLINE}"

args+=(
    -append "$cmdline"
)

# Remap ^C to ^] for SIGINT
stty intr '^]'
trap 'stty sane' EXIT
qemu-system-x86_64 "${args[@]}" "$@"
