#!/bin/busybox sh
# Requires: mount, mkdir, umount, losetup, chroot, switch_root, uname
umask 022; set -e -u
for i in mount modprobe; do
    alias $i=busybox\ $i
done

# Mount base filesystems
mkdir -p proc sys dev run
mount -t proc       none proc
mount -t sysfs      none sys
mount -t devtmpfs   none dev
mkdir -p dev/pts dev/shm
mount -t devpts     devpts dev/pts
mount -t tmpfs      none dev/shm
# http://www.freedesktop.org/wiki/Software/systemd/InitrdInterface/
mount -t tmpfs -o nosuid,nodev,mode=755 none run
mountpoints='proc sys dev dev/pts dev/shm run'

# Load modules after /proc/modules becomes available.
mods='atkbd virtio_ring virtio virtio_net virtio_pci virtio_blk 9pnet_virtio'
mods="$mods virtio_rng isofs loop squashfs ext4"
# convention from systemd-modules-load.service
mods="$mods $(grep -o 'modules-load=[^ ]*' /proc/cmdline | cut -d= -f2 | tr , ' ')"
for mod in $mods; do modprobe -v $mod || :; done

# Increase rootfs size (needs procfs)
mkdir target && mount -t tmpfs -o size=80% none target

# Mount arch iso
mkdir -p archiso sqfs arch
# vda1 is the archlinux iso mounted with -drive if=virtio
mount -t iso9660  -o ro /dev/vda1 archiso
mount -t squashfs -o ro,loop archiso/arch/x86_64/airootfs.sfs sqfs
if [ -e sqfs/airootfs.img ]; then
    # Before v23 sfs_mode=img
    mount -t ext4 -o ro,loop sqfs/airootfs.img arch
else
    # Since v23 sfs_mode=sfs which uses overlayfs.
    mount --bind sqfs arch
fi
# Make some dirs available for the install image, remember unmounts in reverse
mount -o bind /target arch/mnt
unmounts=arch/mnt
for dir in $mountpoints; do
    mkdir -p arch/$dir && mount -o bind /$dir arch/$dir
    unmounts="arch/$dir $unmounts"
done

# Kick off the installation
mv installer arch/run/ins && chroot arch run/ins/init-arch mnt && rm -r run/ins

# Unmount mounts under arch/, and unmount arch iso
umount $unmounts arch sqfs archiso

# In case the kernel is different...
[ -d /target/lib/modules/`uname -r` ] || \
    cp -r /lib/modules/`uname -r` /target/lib/modules/

# Move original mountpoints to the target
for dir in $mountpoints; do
    [ -d /$dir ] || continue # dev/pts is gone!
    mkdir -p target/$dir && mount -o move /$dir target/$dir
done

# Jump!
exec busybox switch_root /target /sbin/init
